%BFS
A=[1,1,1,0,0,0;1,0,0,1,0,0;0,1,0,0,1,0;2,1,0,0,0,1]
B=[800;400;700;1000]
n=6
m=4
nbs=nchoosek(n,m)
D=nchoosek(1:n,m)

Xsoln=[]
for i=1:nbs
 Asub=[]
 index=D(i,:)
 for j=1:m
  Asub=[Asub A(:,index(j))]
 end
 X=zeros(n,1)
 if det(Asub)~=0
  Xbv=inv(Asub)*B
 end
 if Xbv>0
 X(index)=Xbv
 Xsoln=[Xsoln X]
 end
end
Xsoln


%graphical
clc;
clear all;

A = [1 1; 1 0; 0 1; 2 1; 1 0; 0 1];
B = [800; 400; 700; 1000; 0; 0];

C = [4; 3];

m = length(A);

index = 0;

for i = 1:m
    x = -1000:10:1000;
    if A(i, 2) ~= 0
        y = (B(i) - A(i, 1)*x)/A(i, 2);
        plot(x,y);
        hold on;

    else
        y = -1000:10:1000;
        x0 = B(i)*ones(size(y));
        plot(x0, y);
        hold on;

    end

    for j = i+1:m
        asub = A(([i,j]), :);
        bsub = B([i,j],:);

        if det(asub) ~= 0
            index = index + 1
            x = inv(asub) * bsub;

            x1(index, :) = x';

        end
    end
end

if x1 >= 0
    asub = A([1:m-2], :);
    bsub = B([1:m-2]);
end

index1 = 0;

for i = 1:index
     if asub*(x1(i,:))'-bsub <= 0
         index1 = index1 + 1;
         Xfeas(index1,:) = x1(i,:);
         % plot(x1(i,1), x1(i,2), 'o')
     end
end

[Cmax_value, max_index] = max(Xfeas*C, [], 1);  % Use max along rows

% Extract the optimal solution
Xopt = Xfeas(max_index, :);

% Print and potentially plot the optimal solution (optional)
fprintf('Optimal solution: X = [%.2f, %.2f]\n', Xopt(1), Xopt(2));
plot(Xopt(1), Xopt(2), 'o', 'MarkerSize', 10);  % Uncomment to plot
